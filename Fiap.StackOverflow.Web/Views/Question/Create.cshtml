@model Fiap.StackOverflow.Web.Models.QuestionModel

@{
    ViewData["Title"] = "Creating your question.";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Build your question</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <input type="hidden" asp-for="AuthorId" class="form-control" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="Model.Categories"></select>
                <span asp-validation-for="AuthorId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" rows="5" cols="40"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tags" class="control-label"></label>
                @*<select asp-for="Tags" class="form-control" asp-items="Model.Tags"> </select>*@
                <input  type="hidden" />
                <textarea asp-for="SelectedTags" ></textarea>
                <span asp-validation-for="Tags" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script src="~/lib/tagify/dist/jQuery.tagify.min.js"></script>
<script src="~/lib/tagify/dist/tagify.js"></script>
<script data-name="textarea">
    (function () {
        var input = document.querySelector('textarea[id=SelectedTags]'),
            tagify = new Tagify(input, {
                //enforceWhitelist: true,
                whitelist: [

                @{
                    foreach (var item in Model.Tags)
                    {
                        @Html.Raw("{ value: '"+item.Value+"', id: '" +item.Id.ToString()+ "'},");
                    }
                }
                ],
                callbacks: {
                    add: console.log(),  // callback when adding a tag
                    remove: console.log   // callback when removing a tag
                }
            });

        //// Chainable event listeners
        //tagify.on('add', onAddTag)
        //    .on('remove', onRemoveTag)
        //    .on('input', onInput)
        //    .on('invalid', onInvalidTag);

        //// tag added callback
        //function onAddTag(e) {
        //    console.log(e, e.detail);
        //    console.log(tagify.DOM.originalInput.value);
        //    console.log(tagify.DOM.originalInput);
        //    console.log($("textarea[name=tags]").val())
        //    //tagify.off('add', onAddTag) // exmaple of removing a custom Tagify event
        //}

        //// tag remvoed callback
        //function onRemoveTag(e) {
        //    console.log(e, e.detail);
        //}

        //// on character(s) added/removed (user is typing/deleting)
        //function onInput(e) {
        //    console.log(e, e.detail);
        //}

        //// invalid tag added callback
        //function onInvalidTag(e) {
        //    console.log(e, e.detail);
        //}
    })();
</script>

